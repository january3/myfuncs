% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mypalette.R
\name{mypalette}
\alias{mypalette}
\alias{f2pal}
\alias{f2leg}
\title{A nice, pastel color palette}
\usage{
mypalette(n = NULL, transparent = "99", alpha = NULL)

f2pal(f, palfunc = mypalette, ...)

f2leg(f, palfunc = mypalette, ...)
}
\arguments{
\item{n}{length of palette to return. If longer than the number of
colors in the return value of \code{mypalette} without any parameters, colors will be reused.}

\item{transparent}{a character value to be pasted to each of the RGB
color specifications in the palette indicating transparency ("00" for full
transparency, "ff" for full opacity)}

\item{alpha}{same as "transparent", but an alphanumeric value from 0..1.
Takes precedence over "transparent"}

\item{f}{a vector}
}
\value{
\code{mypalette} returns character vector with RGB color
specifications. \code{f2pal} returns a character vector of RGB colors.
\code{f2leg} returns a data frame with columns "text" and "col"
}
\description{
A nice, pastel color palette
}
\details{
A nice, pastel color palette. The \code{f2pal} and \code{f2leg} convert
factors to colors. \code{f2pal} converts a factors to colors directly,
while \code{f2pal} returns a data frame with one column corresponding to
factor levels, and another to the respective colors. This way it is
possible to  use it in legends. If the parameter \code{f} is not a
factor, it will be converted to a factor.
}
\examples{
let <- sample(LETTERS[1:4], 50, replace=TRUE)
col <- f2pal(let)
plot(runif(50), runif(50), pch=19, col=col, cex=2)
leg <- f2leg(let)
legend("topleft", leg$text, pch=19, col=leg$col)
}
